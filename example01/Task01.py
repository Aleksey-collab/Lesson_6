# Вам уже приходилось писать таблицу умножения. 
# Но в этот раз вас попросили сделать в плюс к таблице и умножения еще таблицу сложения, а также таблицу возведения в степень.
# Что не копировать один и тот же код и обобщить все три функции до единой рисования таблиц (бинарных) арифметических операций, 
# напишите функцию print_operation_table(operation, num_rouws=9, num_colums=9), которая принимает в качестве аргумента функцию, 
# вычисляющую элемент по номеру строки и столбца.
# Аргументы num_rows и num_columns указывают число строк и столбцов таблицы, которые должны быть распечатаны. Нумерация строк и столбцов идёт с единицы (подумайте, 
# почему не с нуля).
# Примечание: бинарной операцией называется любая операция, у которой ровно два аргумента, как, например, у операции умножения.

# print_operation_table(operation, num_rouws=9, num_colums=9)

from functools import reduce

def print_operation_table(foo):
    print('\n')
    for i in range(1, 10):
        for j in range(1, 10):
          print(reduce(foo, (i,j)), end='\t')
        print()
        
    return '\n'
    

print_operation_table(lambda a,b: a*b)
print_operation_table(lambda a,b: a+b)
